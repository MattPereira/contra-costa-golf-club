# https://docs.docker.com/compose/compose-file/
# https://github.com/docker/awesome-compose

services:
  postgres:
    image: postgres
    container_name: postgres
    restart : always
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - 5432
    # environment variables set here will be implimented by docker compose build
    # i. e. the name of database will be golf-db and the password will be pineapple
    # also the default POSTGRES_USER is "postgres"
    environment:
      POSTGRES_PASSWORD: pineapple
      POSTGRES_DB: golf-db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  express:
    build:
      context: ./backend
      dockerfile: ../backend/Dockerfile
    container_name: express
    volumes:
      - ./backend/:/code
    command: npm run dev
    ports:
      - 3001:3001
    environment:
      NODE_ENV: development
      # postgres://username:password@host:port/database
      DATABASE_URL: postgres://postgres:pineapple@postgres:5432/golf-db
    depends_on:
      - postgres

volumes:
  db-data:




    # If your application exposes a port, uncomment the following lines and change
    # the port numbers as needed. The first number is the host port and the second
    # is the port inside the container.
    # ports:
      # - 8080:8080

    # The commented out section below is an example of how to define a PostgreSQL
    # database that your application can use. `depends_on` tells Docker Compose to
    # start the database before your application. The `db-data` volume persists the
    # database data between container restarts. The `db-password` secret is used
    # to set the database password. You must create `db/password.txt` and add
    # a password of your choosing to it before running `docker-compose up`.
    #     depends_on:
    #       db:
    #         condition: service_healthy
    #   db:
    #     image: postgres
    #     restart: always
    #     user: postgres
    #     secrets:
    #       - db-password
    #     volumes:
    #       - db-data:/var/lib/postgresql/data
    #     environment:
    #       - POSTGRES_DB=example
    #       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    #     expose:
    #       - 5432
    #     healthcheck:
    #       test: [ "CMD", "pg_isready" ]
    #       interval: 10s
    #       timeout: 5s
    #       retries: 5
    # volumes:
    #   db-data:
    # secrets:
    #   db-password:
    #     file: db/password.txt
